
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer; 


class TestClass {
    public static void main(String args[] ) throws Exception {
       
      

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int N = Integer.parseInt(br.readLine());
        
        int testcases[]=new int[N];
       
        //reading inputs
        for (int i = 0; i < N; i++) 
        	{
          
        		 StringTokenizer  st=new StringTokenizer(br.readLine());
       			 while(st.hasMoreTokens()) 
       			 	{ 
						String key = st.nextToken(); 

						System.out.print(key + "\t" ); 
					} 
 				System.out.println("");

    		} 
    	
    	
    	
    	/* modifying and outputting on the basis of multiple inputs
    	
    
    	 for (int i = 0; i < N; i++) 
        	{
          
        		 StringTokenizer  st=new StringTokenizer(br.readLine());
       			 while(st.hasMoreTokens()) 
       			 	{ 
						int key = Integer.parseInt(st.nextToken()); 

						System.out.print(key+1+"\t"  ); 
				} 
 				System.out.println("");

    		}
    	

          */
          
          /* Array passing and modification and returning arrays
          static int[] modify( int[] kas,int n)
	{
	 	for( int j=0;j<n;j++)
	 		{
	 	          	++kas[j];
	 		}
	 		return kas;
	 
	}
	
    public static void main(String args[] ) throws Exception {
       
      int n=3;
        int testcases[]=new int[]{1,2,3};
        int  kas1[]=modify(testcases,n);
        for( int j=0;j<n;j++)
	 		{
	 			System.out.println(kas1[j]);
	 		}
	}//EOM
        
       */
       
       
       /* converting inputs into an array, modifying it and then displaying 
       
       	static int[] modify( int[] kas)
	{
	 	for( int j=0;j<kas.length;j++)
	 		{
	 			++kas[j];
	 		}	 	
	 		return kas;	 
	}
	
    public static void main(String args[] ) throws Exception {
       
    		   BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        		 StringTokenizer  st=new StringTokenizer(br.readLine());
        		 int testcases[]=new int[st.countTokens()];
        		 
        		 int j=0;
       			 while(st.hasMoreTokens()) 
       			 	{ 
						testcases[j++]=Integer.parseInt(st.nextToken());
       			 	}
 	
        		int  kas1[]=modify(testcases);
      		    for( int k=0;k<kas1.length;k++)
	 				{
	 					System.out.print(kas1[k]+"\t");
	 				}               
    }//EOM
       
       */
       
       
       
       /* reading number of test cases from  first line and then converting other multiple lines into arrays passing as function and modifying
       * and displaying it
       static int[] modify( int[] kas)
	{
	 	for( int j=0;j<kas.length;j++)
	 		{
	 			++kas[j];
	 		}	 	
	 		return kas;	 
	}
	
    public static void main(String args[] ) throws Exception {
       
    		   BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    		    int N = Integer.parseInt(br.readLine());
    		    for(int i=0;i<N;i++)
    		    {
        		 	StringTokenizer  st=new StringTokenizer(br.readLine());
        		 	int testcases[]=new int[st.countTokens()];
        		 
        		 	int j=0;
       			 	while(st.hasMoreTokens()) 
		       			 	{ 
								testcases[j++]=Integer.parseInt(st.nextToken());
       			 			}
 	
        			int  kas1[]=modify(testcases);
      		    	for( int k=0;k<kas1.length;k++)
		 					{
	 							System.out.print(kas1[k]+"\t");
	 						}      
	 				System.out.println("");
    		    }
    } //EOM
       
       */
    }
}
